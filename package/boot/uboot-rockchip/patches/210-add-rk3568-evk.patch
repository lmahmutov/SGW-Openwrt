diff -ruN u-boot-h68k-opc-board-rk3568_orig/u-boot-2021.01/arch/arm/mach-rockchip/Kconfig u-boot-h68k-opc-board-rk3568/u-boot-2021.01/arch/arm/mach-rockchip/Kconfig
--- a/arch/arm/mach-rockchip/Kconfig	2021-01-11 18:11:43.000000000 +0000
+++ b/arch/arm/mach-rockchip/Kconfig	2022-08-08 06:19:50.000000000 +0000
@@ -257,6 +257,25 @@
 	  and video codec support. Peripherals include Gigabit Ethernet,
 	  USB2 host and OTG, SDIO, I2S, UARTs, SPI, I2C and PWMs.
 
+config ROCKCHIP_RK3568
+	bool "Support Rockchip RK3568"
+	select ARM64
+	select SUPPORT_SPL
+	select SPL
+	select CLK
+	select PINCTRL
+	select RAM
+	select REGMAP
+	select SYSCON
+	select BOARD_LATE_INIT
+	imply ROCKCHIP_COMMON_BOARD
+	help
+	  The Rockchip RK3568 is a ARM-based SoC with quad-core Cortex-A55,
+	  including NEON and GPU, 512K L3 cache, Mali-G52 based graphics,
+	  two video interfaces supporting HDMI and eDP, several DDR3 options
+	  and video codec support. Peripherals include Gigabit Ethernet,
+	  USB2 host and OTG, SDIO, I2S, UARTs, SPI, I2C and PWMs.
+
 config ROCKCHIP_RV1108
 	bool "Support Rockchip RV1108"
 	select CPU_V7A
diff -ruN u-boot-h68k-opc-board-rk3568_orig/u-boot-2021.01/arch/arm/mach-rockchip/Makefile u-boot-h68k-opc-board-rk3568/u-boot-2021.01/arch/arm/mach-rockchip/Makefile
--- a/arch/arm/mach-rockchip/Makefile	2021-01-11 18:11:43.000000000 +0000
+++ b/arch/arm/mach-rockchip/Makefile	2022-08-08 06:24:13.000000000 +0000
@@ -42,6 +42,7 @@
 obj-$(CONFIG_ROCKCHIP_RK3328) += rk3328/
 obj-$(CONFIG_ROCKCHIP_RK3368) += rk3368/
 obj-$(CONFIG_ROCKCHIP_RK3399) += rk3399/
+obj-$(CONFIG_ROCKCHIP_RK3568) += rk3568/
 obj-$(CONFIG_ROCKCHIP_RV1108) += rv1108/
 
 # Clear out SPL objects, in case this is a TPL build
diff -ruN u-boot-h68k-opc-board-rk3568_orig/u-boot-2021.01/arch/arm/mach-rockchip/rk3568/clk_rk3568.c u-boot-h68k-opc-board-rk3568/u-boot-2021.01/arch/arm/mach-rockchip/rk3568/clk_rk3568.c
--- a/arch/arm/mach-rockchip/rk3568/clk_rk3568.c	1970-01-01 00:00:00.000000000 +0000
+++ b/arch/arm/mach-rockchip/rk3568/clk_rk3568.c	2022-08-05 17:22:44.000000000 +0000
@@ -0,0 +1,53 @@
+// SPDX-License-Identifier: GPL-2.0
+/*
+ * (C) Copyright 2021 Rockchip Electronics Co., Ltd
+ */
+
+#include <common.h>
+#include <dm.h>
+#include <syscon.h>
+#include <asm/arch-rockchip/clock.h>
+#include <asm/arch-rockchip/cru_rk3568.h>
+#include <linux/err.h>
+
+int rockchip_get_clk(struct udevice **devp)
+{
+	return uclass_get_device_by_driver(UCLASS_CLK,
+			DM_DRIVER_GET(rockchip_rk3568_cru), devp);
+}
+
+void *rockchip_get_cru(void)
+{
+	struct rk3568_clk_priv *priv;
+	struct udevice *dev;
+	int ret;
+
+	ret = rockchip_get_clk(&dev);
+	if (ret)
+		return ERR_PTR(ret);
+
+	priv = dev_get_priv(dev);
+
+	return priv->cru;
+}
+
+static int rockchip_get_pmucruclk(struct udevice **devp)
+{
+	return uclass_get_device_by_driver(UCLASS_CLK,
+			DM_DRIVER_GET(rockchip_rk3568_pmucru), devp);
+}
+
+void *rockchip_get_pmucru(void)
+{
+	struct rk3568_pmuclk_priv *priv;
+	struct udevice *dev;
+	int ret;
+
+	ret = rockchip_get_pmucruclk(&dev);
+	if (ret)
+		return ERR_PTR(ret);
+
+	priv = dev_get_priv(dev);
+
+	return priv->pmucru;
+}
diff -ruN u-boot-h68k-opc-board-rk3568_orig/u-boot-2021.01/arch/arm/mach-rockchip/rk3568/Kconfig u-boot-h68k-opc-board-rk3568/u-boot-2021.01/arch/arm/mach-rockchip/rk3568/Kconfig
--- a/arch/arm/mach-rockchip/rk3568/Kconfig	1970-01-01 00:00:00.000000000 +0000
+++ b/arch/arm/mach-rockchip/rk3568/Kconfig	2022-08-05 17:22:44.000000000 +0000
@@ -0,0 +1,23 @@
+if ROCKCHIP_RK3568
+
+config TARGET_EVB_RK3568
+	bool "RK3568 evaluation board"
+	select BOARD_LATE_INIT
+	help
+	  RK3568 EVB is a evaluation board for Rockchp RK3568.
+
+config ROCKCHIP_BOOT_MODE_REG
+	default 0xfdc20200
+
+config ROCKCHIP_STIMER_BASE
+	default 0xfdd1c020
+
+config SYS_SOC
+	default "rk3568"
+
+config SYS_MALLOC_F_LEN
+	default 0x2000
+
+source "board/rockchip/evb_rk3568/Kconfig"
+
+endif
diff -ruN u-boot-h68k-opc-board-rk3568_orig/u-boot-2021.01/arch/arm/mach-rockchip/rk3568/Makefile u-boot-h68k-opc-board-rk3568/u-boot-2021.01/arch/arm/mach-rockchip/rk3568/Makefile
--- a/arch/arm/mach-rockchip/rk3568/Makefile	1970-01-01 00:00:00.000000000 +0000
+++ b/arch/arm/mach-rockchip/rk3568/Makefile	2022-08-05 17:22:44.000000000 +0000
@@ -0,0 +1,9 @@
+#
+# (C) Copyright 2021 Rockchip Electronics Co., Ltd
+#
+# SPDX-License-Identifier:     GPL-2.0+
+#
+
+obj-y += clk_rk3568.o
+obj-y += rk3568.o
+obj-y += syscon_rk3568.o
diff -ruN u-boot-h68k-opc-board-rk3568_orig/u-boot-2021.01/arch/arm/mach-rockchip/rk3568/rk3568.c u-boot-h68k-opc-board-rk3568/u-boot-2021.01/arch/arm/mach-rockchip/rk3568/rk3568.c
--- a/arch/arm/mach-rockchip/rk3568/rk3568.c	1970-01-01 00:00:00.000000000 +0000
+++ b/arch/arm/mach-rockchip/rk3568/rk3568.c	2022-08-05 17:22:44.000000000 +0000
@@ -0,0 +1,106 @@
+// SPDX-License-Identifier: GPL-2.0+
+/*
+ * (C) Copyright 2021 Rockchip Electronics Co., Ltd
+ */
+
+#include <common.h>
+#include <dm.h>
+#include <asm/armv8/mmu.h>
+#include <asm/io.h>
+#include <asm/arch-rockchip/grf_rk3568.h>
+#include <asm/arch-rockchip/hardware.h>
+#include <dt-bindings/clock/rk3568-cru.h>
+
+#define PMUGRF_BASE			0xfdc20000
+#define GRF_BASE			0xfdc60000
+#define GRF_GPIO1B_DS_2			0x218
+#define GRF_GPIO1B_DS_3			0x21c
+#define GRF_GPIO1C_DS_0			0x220
+#define GRF_GPIO1C_DS_1			0x224
+#define GRF_GPIO1C_DS_2			0x228
+#define GRF_GPIO1C_DS_3			0x22c
+#define SGRF_BASE			0xFDD18000
+#define SGRF_SOC_CON4			0x10
+#define EMMC_HPROT_SECURE_CTRL		0x03
+#define SDMMC0_HPROT_SECURE_CTRL	0x01
+/* PMU_GRF_GPIO0D_IOMUX_L */
+enum {
+	GPIO0D1_SHIFT		= 4,
+	GPIO0D1_MASK		= GENMASK(6, 4),
+	GPIO0D1_GPIO		= 0,
+	GPIO0D1_UART2_TXM0,
+
+	GPIO0D0_SHIFT		= 0,
+	GPIO0D0_MASK		= GENMASK(2, 0),
+	GPIO0D0_GPIO		= 0,
+	GPIO0D0_UART2_RXM0,
+};
+
+/* GRF_IOFUNC_SEL3 */
+enum {
+	UART2_IO_SEL_SHIFT	= 10,
+	UART2_IO_SEL_MASK	= GENMASK(11, 10),
+	UART2_IO_SEL_M0		= 0,
+};
+
+static struct mm_region rk3568_mem_map[] = {
+	{
+		.virt = 0x0UL,
+		.phys = 0x0UL,
+		.size = 0xf0000000UL,
+		.attrs = PTE_BLOCK_MEMTYPE(MT_NORMAL) |
+			 PTE_BLOCK_INNER_SHARE
+	}, {
+		.virt = 0xf0000000UL,
+		.phys = 0xf0000000UL,
+		.size = 0x10000000UL,
+		.attrs = PTE_BLOCK_MEMTYPE(MT_DEVICE_NGNRNE) |
+			 PTE_BLOCK_NON_SHARE |
+			 PTE_BLOCK_PXN | PTE_BLOCK_UXN
+	}, {
+		.virt = 0x300000000,
+		.phys = 0x300000000,
+		.size = 0x0c0c00000,
+		.attrs = PTE_BLOCK_MEMTYPE(MT_DEVICE_NGNRNE) |
+			 PTE_BLOCK_NON_SHARE |
+			 PTE_BLOCK_PXN | PTE_BLOCK_UXN
+	}, {
+		/* List terminator */
+		0,
+	}
+};
+
+struct mm_region *mem_map = rk3568_mem_map;
+
+void board_debug_uart_init(void)
+{
+	static struct rk3568_pmugrf * const pmugrf = (void *)PMUGRF_BASE;
+	static struct rk3568_grf * const grf = (void *)GRF_BASE;
+
+	/* UART2 M0 */
+	rk_clrsetreg(&grf->iofunc_sel3, UART2_IO_SEL_MASK,
+		     UART2_IO_SEL_M0 << UART2_IO_SEL_SHIFT);
+
+	/* Switch iomux */
+	rk_clrsetreg(&pmugrf->pmu_gpio0d_iomux_l,
+		     GPIO0D1_MASK | GPIO0D0_MASK,
+		     GPIO0D1_UART2_TXM0 << GPIO0D1_SHIFT |
+		     GPIO0D0_UART2_RXM0 << GPIO0D0_SHIFT);
+}
+
+int arch_cpu_init(void)
+{
+#ifdef CONFIG_SPL_BUILD
+	/* Set the emmc sdmmc0 to secure */
+	rk_clrreg(SGRF_BASE + SGRF_SOC_CON4, (EMMC_HPROT_SECURE_CTRL << 11
+		| SDMMC0_HPROT_SECURE_CTRL << 4));
+	/* set the emmc driver strength to level 2 */
+	writel(0x3f3f0707, GRF_BASE + GRF_GPIO1B_DS_2);
+	writel(0x3f3f0707, GRF_BASE + GRF_GPIO1B_DS_3);
+	writel(0x3f3f0707, GRF_BASE + GRF_GPIO1C_DS_0);
+	writel(0x3f3f0707, GRF_BASE + GRF_GPIO1C_DS_1);
+	writel(0x3f3f0707, GRF_BASE + GRF_GPIO1C_DS_2);
+	writel(0x3f3f0707, GRF_BASE + GRF_GPIO1C_DS_3);
+#endif
+	return 0;
+}
diff -ruN u-boot-h68k-opc-board-rk3568_orig/u-boot-2021.01/arch/arm/mach-rockchip/rk3568/syscon_rk3568.c u-boot-h68k-opc-board-rk3568/u-boot-2021.01/arch/arm/mach-rockchip/rk3568/syscon_rk3568.c
--- a/arch/arm/mach-rockchip/rk3568/syscon_rk3568.c	1970-01-01 00:00:00.000000000 +0000
+++ b/arch/arm/mach-rockchip/rk3568/syscon_rk3568.c	2022-08-05 17:22:44.000000000 +0000
@@ -0,0 +1,24 @@
+// SPDX-License-Identifier: GPL-2.0+
+/*
+ * (C) Copyright 2021 Rockchip Electronics Co., Ltd
+ */
+
+#include <common.h>
+#include <dm.h>
+#include <syscon.h>
+#include <asm/arch-rockchip/clock.h>
+
+static const struct udevice_id rk3568_syscon_ids[] = {
+	{ .compatible = "rockchip,rk3568-grf", .data = ROCKCHIP_SYSCON_GRF },
+	{ .compatible = "rockchip,rk3568-pmugrf", .data = ROCKCHIP_SYSCON_PMUGRF },
+	{ }
+};
+
+U_BOOT_DRIVER(syscon_rk3568) = {
+	.name = "rk3568_syscon",
+	.id = UCLASS_SYSCON,
+	.of_match = rk3568_syscon_ids,
+#if CONFIG_IS_ENABLED(OF_REAL)
+	.bind = dm_scan_fdt_dev,
+#endif
+};
diff -ruN u-boot-h68k-opc-board-rk3568_orig/u-boot-2021.01/board/rockchip/evb_rk3568/evb_rk3568.c u-boot-h68k-opc-board-rk3568/u-boot-2021.01/board/rockchip/evb_rk3568/evb_rk3568.c
--- a/board/rockchip/evb_rk3568/evb_rk3568.c	1970-01-01 00:00:00.000000000 +0000
+++ b/board/rockchip/evb_rk3568/evb_rk3568.c	2022-08-05 17:22:44.000000000 +0000
@@ -0,0 +1,4 @@
+// SPDX-License-Identifier: GPL-2.0+
+/*
+ * (C) Copyright 2021 Rockchip Electronics Co., Ltd
+ */
diff -ruN u-boot-h68k-opc-board-rk3568_orig/u-boot-2021.01/board/rockchip/evb_rk3568/Kconfig u-boot-h68k-opc-board-rk3568/u-boot-2021.01/board/rockchip/evb_rk3568/Kconfig
--- a/board/rockchip/evb_rk3568/Kconfig	1970-01-01 00:00:00.000000000 +0000
+++ b/board/rockchip/evb_rk3568/Kconfig	2022-08-05 17:22:44.000000000 +0000
@@ -0,0 +1,15 @@
+if TARGET_EVB_RK3568
+
+config SYS_BOARD
+	default "evb_rk3568"
+
+config SYS_VENDOR
+	default "rockchip"
+
+config SYS_CONFIG_NAME
+	default "evb_rk3568"
+
+config BOARD_SPECIFIC_OPTIONS # dummy
+	def_bool y
+
+endif
diff -ruN u-boot-h68k-opc-board-rk3568_orig/u-boot-2021.01/board/rockchip/evb_rk3568/MAINTAINERS u-boot-h68k-opc-board-rk3568/u-boot-2021.01/board/rockchip/evb_rk3568/MAINTAINERS
--- a/board/rockchip/evb_rk3568/MAINTAINERS	1970-01-01 00:00:00.000000000 +0000
+++ b/board/rockchip/evb_rk3568/MAINTAINERS	2022-08-05 17:22:44.000000000 +0000
@@ -0,0 +1,6 @@
+EVB-RK3568
+M:      Joseph Chen <chenjh@rock-chips.com>
+S:      Maintained
+F:      board/rockchip/evb_rk3568
+F:      include/configs/evb_rk3568.h
+F:      configs/evb-rk3568_defconfig
diff -ruN u-boot-h68k-opc-board-rk3568_orig/u-boot-2021.01/board/rockchip/evb_rk3568/Makefile u-boot-h68k-opc-board-rk3568/u-boot-2021.01/board/rockchip/evb_rk3568/Makefile
--- a/board/rockchip/evb_rk3568/Makefile	1970-01-01 00:00:00.000000000 +0000
+++ b/board/rockchip/evb_rk3568/Makefile	2022-08-05 17:22:44.000000000 +0000
@@ -0,0 +1,7 @@
+#
+# (C) Copyright 2021 Rockchip Electronics Co., Ltd
+#
+# SPDX-License-Identifier:     GPL-2.0+
+#
+
+obj-y	+= evb_rk3568.o
diff -ruN u-boot-h68k-opc-board-rk3568_orig/u-boot-2021.01/configs/h68k-opc-board-rk3568_defconfig u-boot-h68k-opc-board-rk3568/u-boot-2021.01/configs/h68k-opc-board-rk3568_defconfig
--- a/configs/h68k-opc-board-rk3568_defconfig	2022-08-08 06:14:46.868184900 +0000
+++ b/configs/h68k-opc-board-rk3568_defconfig	2022-08-08 06:34:33.000000000 +0000
@@ -1,5 +1,6 @@
 CONFIG_ARM=y
 CONFIG_SKIP_LOWLEVEL_INIT=y
+CONFIG_COUNTER_FREQUENCY=24000000
 CONFIG_ARCH_ROCKCHIP=y
 CONFIG_SYS_TEXT_BASE=0x00a00000
 CONFIG_SPL_LIBCOMMON_SUPPORT=y
@@ -15,17 +16,25 @@
 CONFIG_TARGET_EVB_RK3568=y
 CONFIG_DEBUG_UART_BASE=0xFE660000
 CONFIG_DEBUG_UART_CLOCK=24000000
-CONFIG_DEBUG_UART=y
 CONFIG_SYS_LOAD_ADDR=0xc00800
+CONFIG_DEBUG_UART=y
+CONFIG_HAS_CUSTOM_SYS_INIT_SP_ADDR=y
+CONFIG_CUSTOM_SYS_INIT_SP_ADDR=0xc00000
 CONFIG_FIT=y
 CONFIG_FIT_VERBOSE=y
 CONFIG_SPL_LOAD_FIT=y
 CONFIG_DEFAULT_FDT_FILE="rockchip/rk3568-evb.dtb"
 # CONFIG_DISPLAY_CPUINFO is not set
 CONFIG_DISPLAY_BOARDINFO_LATE=y
+CONFIG_SPL_MAX_SIZE=0x20000
+CONFIG_SPL_PAD_TO=0x7f8000
+CONFIG_SPL_HAS_BSS_LINKER_SECTION=y
+CONFIG_SPL_BSS_START_ADDR=0x4000000
+CONFIG_SPL_BSS_MAX_SIZE=0x4000
 # CONFIG_SPL_RAW_IMAGE_SUPPORT is not set
+# CONFIG_SPL_SHARES_INIT_SP_ADDR is not set
+CONFIG_SPL_STACK=0x400000
 CONFIG_SPL_STACK_R=y
-CONFIG_SPL_SEPARATE_BSS=y
 CONFIG_SPL_ATF=y
 CONFIG_CMD_GPT=y
 CONFIG_CMD_MMC=y
@@ -56,4 +65,4 @@
 CONFIG_BAUDRATE=1500000
 CONFIG_DEBUG_UART_SHIFT=2
 CONFIG_SYSRESET=y
-CONFIG_ERRNO_STR=y
+CONFIG_ERRNO_STR=y
\ No newline at end of file
